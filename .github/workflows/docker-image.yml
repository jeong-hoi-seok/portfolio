name: Docker Image CI

on:
  push:
    branches: [ "main" ]
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/portfolio
  VERSION: ${{ github.sha }}
  NAME: portfolio

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.G_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: ${{ env.DOCKER_IMAGE }}:latest
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-go ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.G_TOKEN }}
      - name: Docker run
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          docker stop ${{ env.NAME }} || true  # Avoid errors if the container doesn't exist
          docker rm ${{ env.NAME }} || true  # Avoid errors if the container doesn't exist
          docker run -d -p 80:3000 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest